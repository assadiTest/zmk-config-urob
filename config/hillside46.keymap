/*
 * Copyright (c) 2021-2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include "./helper.h"
#include "./zmk-nodefree-config/keypos_def/keypos_46keys_hillside.h"
#define KEYS_L LT5 LT4 LT3 LT2 LT1 LT0 LM5 LM4 LM3 LM2 LM1 LM0 LB5 LB4 LB3 LB2 LB1 LB0
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RT5 RM0 RM1 RM2 RM3 RM4 RM5 RB0 RB1 RB2 RB3 RB4 RB5
#define KEYS_T LH4 LH3 LH2 LH1 LH0 RH0 RH1 RH2 RH3 RH4


#define QWERTY_L 0
#define DVORAK_L 1
#define COLEMK_L 2
#define NAV_L    3
#define SYM_L    4
#define ADJ_L    5
#define Undo   LC(Z)
#define Cut    LC(X)
#define Copy   LC(C)
#define Paste  LC(V)
#define Redo   LC(Y)i


//urob variables
#define HM_TAPPING_TERM 300
#define HM_TAPPING_TERM_FAST 200


/*
Both mouse movement and scrolling have independently configurable
acceleration profiles with three parameters: delay before movement,
time to max speed and the acceleration exponent. The exponent is
usually set to 0 for constant speed, 1 for uniform acceleration or
2 for uniform jerk.*/

#define U_MOUSE_MOVE_MAX 1400                     /* <--- New max speed setting (default: 600) */

#undef MOVE_UP
#undef MOVE_DOWN
#undef MOVE_LEFT
#undef MOVE_RIGHT

#define MOVE_UP MOVE_VERT(-U_MOUSE_MOVE_MAX)
#define MOVE_DOWN MOVE_VERT(U_MOUSE_MOVE_MAX)
#define MOVE_LEFT MOVE_HOR(-U_MOUSE_MOVE_MAX)
#define MOVE_RIGHT MOVE_HOR(U_MOUSE_MOVE_MAX)

&mmv {
    time-to-max-speed-ms = <400>;             /* <--- How long time until max speed is reached (default: 500) */
};

#define U_MOUSE_SCROLL_MAX 100                    /* <--- New max speed setting (default: 10) */

#undef SCROLL_UP
#undef SCROLL_DOWN
#undef SCROLL_LEFT
#undef SCROLL_RIGHT

#define SCROLL_UP SCROLL_VERT(U_MOUSE_SCROLL_MAX)
#define SCROLL_DOWN SCROLL_VERT(-U_MOUSE_SCROLL_MAX)
#define SCROLL_LEFT SCROLL_HOR(-U_MOUSE_SCROLL_MAX)
#define SCROLL_RIGHT SCROLL_HOR(U_MOUSE_SCROLL_MAX)

&mwh {
    time-to-max-speed-ms = <500>;                 /* <--- How long time until max speed is reached */
    acceleration-exponent = <1>;
};

/ {

    behaviors {
        bm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "BALANCED_HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;    // <---[[moderate duration]]
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        // Positional Homerow mods
        // Homerow mods that prevent accidental activations when rolling keys,
        // such as when typing `st` or `ne` on colemak-dh layouts or `as` on
        // qwerty.
        //
        // Works by only allowing a mod to activate within tapping-term if
        // it's on the opposite side of the keyboard or on the same side thumb
        // keys.

        // Further optimization using urob's timerless homerow mods method:
        // https://github.com/urob/zmk-config#timeless-homerow-mods
        hm_l: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT";
            #binding-cells = <2>;
            bindings = <&kp>,  <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick-tap-ms = <175>;                // repeat on tap-into-hold
            global-quick-tap-ms = <150>;         // requires PR #1387
            hold-trigger-key-positions = <KEYS_R KEYS_T>;
            hold-trigger-on-release;             // requires PR #1423
        };

        hm_r: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick_tap_ms = <175>;
            global-quick-tap-ms = <150>;         // requires PR #1387
            hold-trigger-key-positions = <KEYS_L KEYS_T>;
            hold-trigger-on-release;             // requires PR #1423
        };


        // Positional Homerow mods for shift
        // Use faster tapping term and disable some features that may
        // cause false negatives.
        hm_shift_l: hm_shift_l {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_FAST_LEFT";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM_FAST>;
            quick_tap_ms = <175>;
            // global-quick-tap-ms = <150>;         // requires PR #1387
            hold-trigger-key-positions = <KEYS_R KEYS_T>;
            // hold-trigger-on-release;             // requires PR #1423
        };

        hm_shift_r: hm_shift_r {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_FAST_RIGHT";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM_FAST>;
            quick_tap_ms = <175>;
            // global-quick-tap-ms = <150>;         // requires PR #1387
            hold-trigger-key-positions = <KEYS_L KEYS_T>;
            // hold-trigger-on-release;             // requires PR #1423
        };

        /*
         * Non-Positional Homerow Mods
         * Used for &mm_grescm_gui behavior on left hand.
         *
         * Usage: &hm LSHFT T
         * Tap: T
         * Tap-Tap-Hold: Repeat T
         * Hold: LSHIFT
         */
        hmu: homerow_mods_urob {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick_tap_ms = <200>;
        };

    };
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            /* QWERTY
 * -------------------------------------------------------------------------------------------------------------------------------------
 * | `     |   Q   |   W   |   E   |   R   |   T   |-----------------------------------|   Y   |   U   |   I   |   O   |   P   | BKSPC |
 * | TAB   |   A   |   S   |   D   |   F   |   G   |-----------------------------------|   H   |   J   |   K   |   L   |   ;   | ENTER |
 * | CTRL  |   Z   |   X   |   C   |   V   |   B   |  ESC  |-------------------|  CAPS |   N   |   M   |   ,   |   .   |   /   |   '   |
 *                                 |  GUI  |  ALT  |SK SHFT|  Nav  |---|  Sym  | SPACE |  ALT  |  GUI  |
 */

            bindings = <
&kp GRAVE        &kp Q       &kp W           &kp E               &kp R         &kp T                                                             &kp Y         &kp U        &kp I        &kp O       &kp P          &mt RIGHT_BRACKET LEFT_BRACKET
&mt PIPE EXCL    &hm LGUI A  &hm LEFT_ALT S  &hm LEFT_CONTROL D  &hm LSHIFT F  &kp G                                                             &kp H         &hm RSHFT J  &hm RCTRL K  &hm LALT L  &hm LGUI SEMI  &kp MINUS
&mt TILDE ASTRK  &kp Z       &kp X           &kp C               &kp V         &kp B         &kp K_APP                          &caps_word       &kp N         &kp M        &kp COMMA    &kp DOT     &kp SLASH      &kp SQT
                                                                 &key_repeat   &lt 1 ESCAPE  &lt 2 SPACE  &lt 3 TAB  &lt 4 RET  &lt 5 BACKSPACE  &lt 6 DELETE  &key_repeat
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        Nav {
            bindings = <
&trans  &trans    &trans    &trans     &trans     &trans                                       &kp K_UNDO    &kp HOME  &kp PG_DN   &kp PG_UP    &kp END    &trans
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans                                       &kp CAPSLOCK  &kp LEFT  &kp DOWN    &kp UP       &kp RIGHT  &trans
&trans  &trans    &trans    &trans     &trans     &trans  &trans                     &trans    &kp K_REDO    &kp INS   &kp K_COPY  &kp K_PASTE  &kp K_CUT  &trans
                                       &trans     &trans  &trans  &trans  &kp ENTER  &kp BSPC  &kp DELETE    &trans
            >;

            label = "Nav";
        };

        Mouse {
            bindings = <
&trans  &trans    &trans    &trans     &trans     &trans                                        &trans     &trans            &trans            &trans          &trans             &trans
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans                                        &trans     &mmv MOVE_LEFT    &mmv MOVE_DOWN    &mmv MOVE_UP    &mmv MOVE_RIGHT    &trans
&trans  &trans    &trans    &trans     &trans     &trans  &trans                     &trans     &trans     &mwh SCROLL_LEFT  &mwh SCROLL_DOWN  &mwh SCROLL_UP  &mwh SCROLL_RIGHT  &trans
                                       &trans     &trans  &trans  &trans  &mkp MCLK  &mkp LCLK  &mkp RCLK  &trans
            >;

            label = "Mouse";
        };

        Media {
            bindings = <
&trans  &trans        &trans        &trans     &trans     &trans                                                &trans             &trans               &out OUT_TOG  &trans        &trans                     &trans
&trans  &kp LEFT_GUI  &kp LEFT_ALT  &kp LCTRL  &kp LSHFT  &trans                                                &ext_power EP_TOG  &mt C_PREV C_REWIND  &kp C_VOL_DN  &kp C_VOL_UP  &mt C_NEXT C_FAST_FORWARD  &trans
&trans  &trans        &trans        &trans     &trans     &trans  &trans                      &bt BT_CLR        &bt BT_SEL 0       &bt BT_SEL 1         &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4               &key_repeat
                                               &trans     &trans  &trans  &trans  &kp C_STOP  &kp C_PLAY_PAUSE  &kp C_MUTE         &trans
            >;

            label = "Media";
        };

        Sym {
            bindings = <
&trans     &kp EXCL  &kp DOLLAR   &kp AMPERSAND  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS                                  &trans  &trans      &trans     &trans    &trans    &trans
&kp COLON  &kp AT    &kp PERCENT  &kp ASTERISK   &kp LEFT_BRACKET      &kp RIGHT_BRACKET                                      &trans  &kp LSHIFT  &kp LCTRL  &kp LALT  &kp LGUI  &trans
&kp TILDE  &kp HASH  &kp CARET    &kp PIPE       &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans                  &trans  &trans  &trans      &trans     &trans    &trans    &trans
                                                 &trans                &trans                 &trans  &trans  &trans  &trans  &trans  &trans
            >;

            label = "Sym";
        };

        Num {
            bindings = <
&kp KP_COMMA  &kp N0   &kp N7  &kp N4  &kp N1    &kp EQUAL                                     &trans  &trans     &trans     &trans    &trans    &trans
&kp COLON     &kp TAB  &kp N8  &kp N5  &kp N2    &kp FSLH                                      &trans  &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI  &trans
&kp STAR      &kp RET  &kp N9  &kp N6  &kp N3    &kp BSLH   &trans                     &trans  &trans  &trans     &trans     &trans    &trans    &trans
                                       &kp PLUS  &kp DOT    &kp N0  &kp MINUS  &trans  &trans  &trans  &trans
            >;

            label = "Num";
        };

        Fun {
            bindings = <
&trans  &kp F10  &kp F7  &kp F4  &kp F1  &kp PRINTSCREEN                                  &trans  &kp F13         &kp F16        &kp F19       &kp F22       &trans
&trans  &kp F11  &kp F8  &kp F5  &kp F2  &kp SCROLLLOCK                                   &trans  &mt LSHIFT F14  &mt LCTRL F17  &mt LALT F20  &mt LGUI F22  &trans
&trans  &kp F12  &kp F9  &kp F6  &kp F3  &kp PAUSE_BREAK  &trans                  &trans  &trans  &kp F15         &kp F18        &kp F21       &kp F24       &trans
                                 &trans  &trans           &trans  &trans  &trans  &trans  &trans  &trans
            >;

            label = "Fun";
        };
    };
};
